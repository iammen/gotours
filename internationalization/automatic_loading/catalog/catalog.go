// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package main

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p := messageKeyToIndex[key]
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"el": &dictionary{index: elIndex, data: elData},
		"en": &dictionary{index: enIndex, data: enData},
	}
	fallback := language.MustParse("en")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"%.2[1]f miles traveled (%[1]f)": 5,
	"%s is visiting %s!":             4,
	"Hello":                          1,
	"Hello ":                         2,
	"Hello %s!":                      3,
	"Hello world!":                   0,
}

var elIndex = []uint32{ // 7 elements
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000,
} // Size: 52 bytes

const elData string = ""

var enIndex = []uint32{ // 7 elements
	0x00000000, 0x0000000d, 0x00000013, 0x0000001e,
	0x0000002b, 0x00000044, 0x00000063,
} // Size: 52 bytes

const enData string = "" + // Size: 99 bytes
	"\x02Hello world!\x02Hello\x04\x00\x01 \x06\x02Hello\x02Hello %[1]s!\x02%" +
	"[1]s is visiting %[2]s!\x02%.2[1]f miles traveled (%[1]f)"

	// Total table size 203 bytes (0KiB); checksum: 34FD5E0E
